

car_costmap:
  car_costmap:
    ros__parameters:
      update_frequency: 2.0 #原始值为1.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
        # robot_radius: 0.55 #用于设置要使用的机器人半径
      footprint: "[[-0.406, -0.465], [-0.406, 0.465], [0.406, 0.465], [0.406, -0.465]]"
      resolution: 0.05 #用于设置成本地图上1个像素的分辨率，单位为m
      track_unknown_space: true  #用于设置是否将未知空间视为空闲空间。如果为false，则会将未知空间视为空闲空间；否则视为未知空间
      plugins: ["static_layer", "obstacle_layer", "keepout_filter", "inflation_layer"]
      filters: ["keepout_filter"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan  #point2scan_front_up point2scan_front_down  #point2scan_back #person_cloud
        scan:
          topic: /scan
          obstacle_max_range: 10.0
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
        point2scan_back:
          topic: /point_scan_back
          max_obstacle_height: 3.0
          obstacle_max_range: 3.0
          min_obstacle_height: 0.0
          expected_update_rate: 0.7
          clearing: True
          marking: True
          data_type: "LaserScan"
        point2scan_front_up:
          topic: /point_scan_front_up
          max_obstacle_height: 1.8
          min_obstacle_height: 0.0
          obstacle_max_range: 3.0
          expected_update_rate: 0.7
          clearing: True
          marking: True
          data_type: "LaserScan"
        point2scan_front_down:
          topic: /point_scan_front_down
          max_obstacle_height: 3.0
          obstacle_max_range: 3.0
          min_obstacle_height: 0.0
          expected_update_rate: 0.7
          clearing: True
          marking: True
          data_type: "LaserScan"
        person_cloud:
          topic: /points_cloud_person
          max_obstacle_height: 3.0
          obstacle_max_range: 3.0
          min_obstacle_height: 0.0
          expected_update_rate: 0.7
          clearing: True
          marking: True
          data_type: "PointCloud2"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/nav/keepout/info"
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.8  #扩大致命障碍物周围的成本图的半径
      always_send_full_costmap: True

  car_costmap_client:
    ros__parameters:
      use_sim_time: False

  car_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

robot_avoidance_node:
  ros__parameters:
    planner_plugins: ["GridBased"]
    use_sim_time: True

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      # car_length: 0.5
      # car_width: 0.5
      downsample_costmap: false           # whether or not to downsample the map
      downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      tolerance: 0.25                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
      allow_unknown: true                 # allow traveling in unknown space
      max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
      max_planning_time: 5.0              # max time in s for planner to plan, smooth
      motion_model_for_search: "DUBIN"    # Hybrid-A* Dubin, Redds-Shepp
      angle_quantization_bins: 72         # Number of angle bins for search
      analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
      minimum_turning_radius: 0.40        # minimum turning radius in m of path / vehicle
      reverse_penalty: 2.0                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.0                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.2           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 2.0                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      retrospective_penalty: 0.015
      lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      viz_expansions: false               # For Hybrid nodes: Whether to publish expansions on the /expansions topic as an array of poses (the orientation has no meaning). WARNING: heavy to compute and to display, for debug only as it degrades the performance.
      smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path

      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2


welt_model_node:
  ros__parameters:
    footprint_w: 0.2
    footprint_h_back: 0.2
    footprint_h_front: 0.2